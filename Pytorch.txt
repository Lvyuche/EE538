x = torch.Tensor(2, 3, 4)
The function torch.Tensor allocates memory for the desired tensor, 
but reuses any values that have already been in the memory.
tensor([[[ 6.5254e+10,  3.0890e-41,  4.2039e-45, -6.3663e-15],
         [ 6.5246e+10,  3.0890e-41,  1.6367e-42,  4.5787e-41],
         [ 6.5254e+10,  3.0890e-41,  4.2039e-45,  4.5787e-41]],

        [[ 6.5255e+10,  3.0890e-41,  1.4013e-45,  0.0000e+00],
         [ 6.5255e+10,  3.0890e-41,  6.5246e+10,  3.0890e-41],
         [ 1.7404e-42, -5.0820e+26,  6.5255e+10,  3.0890e-41]]])

x = torch.Tensor([[1, 2], [3, 4]])
tensor([[1., 2.],
        [3., 4.]])


torch.zeros: Creates a tensor filled with zeros
torch.ones: Creates a tensor filled with ones
torch.rand: Creates a tensor with random values uniformly sampled between 0 and 1
torch.randn: Creates a tensor with random values sampled from a normal distribution with mean 0 and variance 1
torch.arange: Creates a tensor containing the values  N,N+1,N+2,...,M 
torch.Tensor (input list): Creates a tensor from the list elements you provide

